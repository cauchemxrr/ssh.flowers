// Modern Telegram Mini App –¥–ª—è ssh.flowers
let tg = window.Telegram.WebApp;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let isAdmin = false;
const ADMIN_ID = 5315749575; // –í–∞—à Telegram ID

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±—É–∫–µ—Ç–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)
let bouquetsDatabase = {
    love: [],      // –õ—é–±–∏–º–æ–π
    impress: [],   // –ö–æ–∑—ã—Ä–Ω—É—Ç—å
    sorry: [],     // –û–±–ª–∞–∂–∞–ª—Å—è
    march8: [],    // 8 –º–∞—Ä—Ç–∞
    birthday: [],  // –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
    any: []        // –ù–∞ –ª—é–±–æ–π —Å–ª—É—á–∞–π
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
    tg.ready();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–µ–º—É
    tg.expand();
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const user = tg.initDataUnsafe?.user;
    if (user) {
        document.getElementById('user-name').textContent = user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        if (user.photo_url) {
            document.getElementById('user-avatar').src = user.photo_url;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        if (user.id === ADMIN_ID) {
            isAdmin = true;
            document.getElementById('admin-panel').style.display = 'block';
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const categoryCards = document.querySelectorAll('.category-card');
    categoryCards.forEach((card, index) => {
        card.style.setProperty('--animation-order', index);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –±—É–∫–µ—Ç—ã –∏–∑ localStorage
    loadBouquetsFromStorage();
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    document.querySelectorAll('.category-card').forEach(card => {
        card.addEventListener('click', function() {
            const category = this.dataset.category;
            showCategoryBouquets(category);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –±—É–∫–µ—Ç–∞
    document.getElementById('bouquet-form').addEventListener('submit', function(e) {
        e.preventDefault();
        sendCustomBouquetRequest();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º—ã —Å–≤—è–∑–∏
    document.getElementById('contact-form').addEventListener('submit', function(e) {
        e.preventDefault();
        sendContactMessage();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É–∫–µ—Ç–∞
    document.getElementById('add-bouquet-form').addEventListener('submit', function(e) {
        e.preventDefault();
        addNewBouquet();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    document.querySelectorAll('.close').forEach(closeBtn => {
        closeBtn.addEventListener('click', function() {
            this.closest('.modal').style.display = 'none';
        });
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
    window.addEventListener('click', function(e) {
        if (e.target.classList.contains('modal')) {
            e.target.style.display = 'none';
        }
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function showCategoryBouquets(category) {
    const modal = document.getElementById('category-modal');
    const categoryTitle = document.getElementById('category-title');
    const bouquetsContainer = document.getElementById('bouquets-in-category');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const categoryNames = {
        'love': 'üåπ –õ—é–±–∏–º–æ–π',
        'impress': 'üé© –ö–æ–∑—ã—Ä–Ω—É—Ç—å',
        'sorry': 'üòÖ –û–±–ª–∞–∂–∞–ª—Å—è',
        'march8': 'üå∏ 8 –º–∞—Ä—Ç–∞',
        'birthday': 'üéÇ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
        'any': 'üíê –ù–∞ –ª—é–±–æ–π —Å–ª—É—á–∞–π'
    };
    
    categoryTitle.textContent = categoryNames[category] || 'üíê –ö–∞—Ç–µ–≥–æ—Ä–∏—è';
    
    // –ü–æ–ª—É—á–∞–µ–º –±—É–∫–µ—Ç—ã –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const bouquets = bouquetsDatabase[category] || [];
    
    if (bouquets.length === 0) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ø–æ–∫–∞ –ø—É—Å—Ç–æ"
        bouquetsContainer.innerHTML = `
            <div class="empty-state">
                <div class="empty-state-icon">üå∫</div>
                <h3>–ü–æ–∫–∞ —Ç—É—Ç –ø—É—Å—Ç–æ</h3>
                <p>–ù–æ —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –∫—Ä–∞—Å–∏–≤—ã–µ –±—É–∫–µ—Ç—ã!<br>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏.</p>
            </div>
        `;
    } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—É–∫–µ—Ç—ã
        bouquetsContainer.innerHTML = `
            <div class="bouquets-in-category">
                ${bouquets.map(bouquet => `
                    <div class="bouquet-item">
                        <div class="bouquet-image">
                            ${bouquet.image ? `<img src="${bouquet.image}" alt="${bouquet.name}">` : 'üå∫'}
                        </div>
                        <h4>${bouquet.name}</h4>
                        <p>${bouquet.description}</p>
                        <div class="bouquet-price">${bouquet.price.toLocaleString()} ‚ÇΩ</div>
                        <button class="btn-primary" onclick="orderBouquet('${bouquet.name}', ${bouquet.price}, '${categoryNames[category]}')">–ó–∞–∫–∞–∑–∞—Ç—å</button>
                    </div>
                `).join('')}
            </div>
        `;
    }
    
    modal.style.display = 'block';
}

// –ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç
function orderBouquet(name, price, category) {
    const orderData = {
        type: 'bouquet_order',
        name: name,
        price: price,
        category: category,
        user: tg.initDataUnsafe?.user || {},
        timestamp: new Date().toISOString()
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    tg.sendData(JSON.stringify(orderData));
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.getElementById('category-modal').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    tg.showAlert('‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
}

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –±—É–∫–µ—Ç–∞
function sendCustomBouquetRequest() {
    const formData = {
        count: document.getElementById('flower-count').value,
        flowers: document.getElementById('flower-types').value,
        package: document.getElementById('package').value,
        card: document.getElementById('card').value,
        wishes: document.getElementById('wishes').value
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!formData.count || !formData.flowers || !formData.package) {
        tg.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!');
        return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const customBouquetData = {
        type: 'custom_bouquet_request',
        ...formData,
        user: tg.initDataUnsafe?.user || {},
        timestamp: new Date().toISOString()
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    tg.sendData(JSON.stringify(customBouquetData));
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('bouquet-form').reset();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    tg.showAlert('‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∏ —Ü–µ–Ω—ã.');
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å–≤—è–∑–∏
function sendContactMessage() {
    const message = document.getElementById('contact-message').value;
    
    if (!message.trim()) {
        tg.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!');
        return;
    }
    
    const contactData = {
        type: 'contact',
        message: message,
        user: tg.initDataUnsafe?.user || {}
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    tg.sendData(JSON.stringify(contactData));
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('contact-form').reset();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    tg.showAlert('‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
}

// –ê–î–ú–ò–ù –§–£–ù–ö–¶–ò–ò

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—É–∫–µ—Ç–∞–º–∏
function manageBouquets() {
    const modal = document.getElementById('manage-bouquets-modal');
    modal.style.display = 'block';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±—É–∫–µ—Ç—ã
    showExistingBouquets();
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±—É–∫–µ—Ç—ã
function showExistingBouquets() {
    const container = document.getElementById('existing-bouquets');
    let allBouquets = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –±—É–∫–µ—Ç—ã –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    Object.keys(bouquetsDatabase).forEach(category => {
        bouquetsDatabase[category].forEach(bouquet => {
            allBouquets.push({ ...bouquet, category });
        });
    });
    
    if (allBouquets.length === 0) {
        container.innerHTML = '<p style="text-align: center; color: #6b7280;">–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –±—É–∫–µ—Ç–æ–≤</p>';
        return;
    }
    
    container.innerHTML = `
        <div style="max-height: 300px; overflow-y: auto;">
            ${allBouquets.map(bouquet => `
                <div style="display: flex; align-items: center; margin-bottom: 10px; padding: 10px; border: 1px solid #e5e7eb; border-radius: 8px;">
                    <div style="flex: 1;">
                        <strong>${bouquet.name}</strong><br>
                        <small>${getCategoryName(bouquet.category)}</small>
                    </div>
                    <div style="margin-right: 10px;">
                        <strong>${bouquet.price} ‚ÇΩ</strong>
                    </div>
                    <button class="admin-btn" onclick="deleteBouquet('${bouquet.name}', '${bouquet.category}')" style="background: #ef4444;">üóëÔ∏è</button>
                </div>
            `).join('')}
        </div>
    `;
}

// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function getCategoryName(category) {
    const categoryNames = {
        'love': 'üåπ –õ—é–±–∏–º–æ–π',
        'impress': 'üé© –ö–æ–∑—ã—Ä–Ω—É—Ç—å',
        'sorry': 'üòÖ –û–±–ª–∞–∂–∞–ª—Å—è',
        'march8': 'üå∏ 8 –º–∞—Ä—Ç–∞',
        'birthday': 'üéÇ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
        'any': 'üíê –ù–∞ –ª—é–±–æ–π —Å–ª—É—á–∞–π'
    };
    return categoryNames[category] || category;
}

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –±—É–∫–µ—Ç
function addNewBouquet() {
    const category = document.getElementById('bouquet-category').value;
    const name = document.getElementById('bouquet-name').value;
    const description = document.getElementById('bouquet-description').value;
    const price = parseInt(document.getElementById('bouquet-price').value);
    const image = document.getElementById('bouquet-image').value;
    
    if (!category || !name || !description || !price) {
        tg.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!');
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±—É–∫–µ—Ç
    const newBouquet = {
        id: Date.now(),
        name: name,
        description: description,
        price: price,
        image: image || null
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if (!bouquetsDatabase[category]) {
        bouquetsDatabase[category] = [];
    }
    bouquetsDatabase[category].push(newBouquet);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    saveBouquetsToStorage();
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('add-bouquet-form').reset();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±—É–∫–µ—Ç–æ–≤
    showExistingBouquets();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    tg.showAlert('‚úÖ –ë—É–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
}

// –£–¥–∞–ª–∏—Ç—å –±—É–∫–µ—Ç
function deleteBouquet(name, category) {
    if (confirm(`–£–¥–∞–ª–∏—Ç—å –±—É–∫–µ—Ç "${name}"?`)) {
        bouquetsDatabase[category] = bouquetsDatabase[category].filter(b => b.name !== name);
        saveBouquetsToStorage();
        showExistingBouquets();
        tg.showAlert('üóëÔ∏è –ë—É–∫–µ—Ç —É–¥–∞–ª–µ–Ω!');
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
function manageCategories() {
    const modal = document.getElementById('manage-categories-modal');
    const container = document.getElementById('categories-management');
    
    container.innerHTML = `
        <div style="text-align: center; padding: 20px;">
            <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏</p>
            <p>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π</p>
            <p style="color: #6b7280; font-size: 0.875rem;">–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
        </div>
    `;
    
    modal.style.display = 'block';
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤
function viewOrders() {
    const modal = document.getElementById('orders-modal');
    const ordersList = document.getElementById('orders-list');
    
    ordersList.innerHTML = `
        <div style="text-align: center; padding: 20px;">
            <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ –∑–∞–∫–∞–∑—ã</p>
            <p>–ó–∞–∫–∞–∑—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞</p>
        </div>
    `;
    
    modal.style.display = 'block';
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—É–∫–µ—Ç—ã –≤ localStorage
function saveBouquetsToStorage() {
    localStorage.setItem('ssh-flowers-bouquets', JSON.stringify(bouquetsDatabase));
}

// –ó–∞–≥—Ä—É–∑–∏—Ç—å –±—É–∫–µ—Ç—ã –∏–∑ localStorage
function loadBouquetsFromStorage() {
    const saved = localStorage.getItem('ssh-flowers-bouquets');
    if (saved) {
        try {
            bouquetsDatabase = JSON.parse(saved);
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—É–∫–µ—Ç–æ–≤:', e);
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
tg.MainButton.onClick(function() {
    tg.MainButton.hide();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
tg.BackButton.onClick(function() {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
});

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type = 'info') {
    tg.showAlert(message);
}

// –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function animateElement(element, delay = 0) {
    element.style.opacity = '0';
    element.style.transform = 'translateY(20px)';
    
    setTimeout(() => {
        element.style.transition = 'all 0.6s ease-out';
        element.style.opacity = '1';
        element.style.transform = 'translateY(0)';
    }, delay);
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∫ —Å–µ–∫—Ü–∏—è–º
document.addEventListener('DOMContentLoaded', function() {
    const sections = document.querySelectorAll('section');
    sections.forEach((section, index) => {
        animateElement(section, index * 100);
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
    console.error('–û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:', e.error);
    tg.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
window.addEventListener('unhandledrejection', function(e) {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–º–∏—Å–∞:', e.reason);
    tg.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
});
